name: release
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.**"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          submodules: true
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
  publish:
    name: publish ${{ matrix.name }}
    needs:
      - release
    strategy:
      fail-fast: true
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            suffix: windows-x86_64
            archive: zip
            name: x86_64-pc-windows-gnu
          - target: x86_64-unknown-linux-gnu
            suffix: linux-x86_64
            archive: tar.xz
            name: x86_64-unknown-linux-gnu
          - target: x86_64-apple-darwin
            suffix: darwin-x86_64
            archive: tar.gz
            name: x86_64-apple-darwin
    runs-on: ubuntu-latest
    steps:
      - name: Clone test repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Update and intall dependencies
        run: sudo apt-get update && sudo apt-get install -y texlive-full latexmk
      - name: Setup go-task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Clean Project
        run: task spap:clean
      - name: PlantUML
        uses: holowinski/plantuml-github-action@main
        with:
          args: -v -tpng "sa-pap-paper/sections/img/*.pml"
      - name: Build PDF
        run: task spap:pdf
      - uses: xhaiker/rust-release.action@v1.0.4
        name: build ${{ matrix.name }}
        with:
          release: ${{ github.ref_name }}
          rust_target: ${{ matrix.target }}
          archive_suffix: ${{ matrix.suffix }}
          archive_types: ${{ matrix.archive }}
          build_options: -r
          extra_files: "LICENSE sa-pap-paper/sa-pap.pdf"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
